<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical on keep living, keep learning..</title>
    <link>http://varunksaini.com/categories/technical/</link>
    <description>Recent content in Technical on keep living, keep learning..</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2015 Copyright Text</copyright>
    <lastBuildDate>Sat, 04 Jun 2016 16:45:52 -0500</lastBuildDate>
    <atom:link href="http://varunksaini.com/categories/technical/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>weekly reading 4June</title>
      <link>http://varunksaini.com/weekly-reading-4June/</link>
      <pubDate>Sat, 04 Jun 2016 16:45:52 -0500</pubDate>
      
      <guid>http://varunksaini.com/weekly-reading-4June/</guid>
      <description>&lt;p&gt;Tracking my online article reading has been helpful so far. I am more aware about what to read and what not to read. I am no saving articles mindlessly to my &lt;strong&gt;Pocket&lt;/strong&gt; app. This week I read an article about &lt;strong&gt;reading and comprehending&lt;/strong&gt; &lt;a href=&#34;https://blog.todoist.com/2016/04/25/read-less-learn-more/&#34;&gt;read less learn more&lt;/a&gt;, TL;DR when we read mindlessly we don&amp;rsquo;t comprehend much, and we don&amp;rsquo;t learn much. So idea is to learn more and read less. Also I read books from my kindle queue this week. I am done reading 50% of &lt;a href=&#34;https://www.amazon.com/gp/product/B00OM9OKEC/ref=kinw_myk_ro_title&#34;&gt;&amp;reg;evolution (Phoenix Horizon Book 1)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. http://rbcs-us.com/documents/Why-Most-Unit-Testing-is-Waste.pdf
2. https://www.oreilly.com/ideas/swarm-v-fleet-v-kubernetes-v-mesos
3. http://googletesting.blogspot.com/2016/05/flaky-tests-at-google-and-how-we.html?m=1
4. https://coreos.com/blog/torus-distributed-storage-by-coreos.html
5. https://medium.com/@francesc/go-tooling-in-action-eca6882ff3bc#.46jdwvs4h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. http://lifehacker.com/everything-you-need-to-stock-your-first-home-bar-1779335148
2. http://www.newyorker.com/business/currency/the-tech-booms-second-cities
3. https://medium.com/@billjordan1/the-quiet-crisis-unfolding-in-software-development-cffbdafbf450#.mcoq5tcc4
4. http://jacquesmattheij.com/ycs-basic-income-experiment
5. http://www.hanselman.com/blog/IsTechnologyKillingCuriosity.aspx
6. http://jvns.ca/blog/2016/05/29/three-ways-to-solve-hard-programming-problems/
7. https://blog.devmastery.com/how-to-win-the-coding-interview-71ae7102d685#.td3h8rhs5
8. https://blog.todoist.com/2016/04/25/read-less-learn-more/
9. http://yosefk.com/blog/evil-tip-avoid-easy-things.html
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>weekly reading 29May</title>
      <link>http://varunksaini.com/weekly-reading-29May/</link>
      <pubDate>Sun, 29 May 2016 08:38:58 -0500</pubDate>
      
      <guid>http://varunksaini.com/weekly-reading-29May/</guid>
      <description>&lt;p&gt;This week I read more technical articles then general articles. Also I spent more time reading my kindle books. I am reading two books &lt;a href=&#34;https://www.amazon.com/gp/product/B00PWX7RPG&#34;&gt;Rise of the Robots: Technology and the Threat of a Jobless Future&lt;/a&gt; and &lt;a href=&#34;https://www.amazon.com/evolution-Phoenix-Horizon-Book-ebook/dp/B00OM9OKEC&#34;&gt;Revolution&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://jvns.ca/blog/2016/04/23/java-garbage-collection-can-be-really-slow/&#34;&gt;http://jvns.ca/blog/2016/04/23/java-garbage-collection-can-be-really-slow/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvns.ca/blog/2016/04/25/how-regular-expressions-go-fast/&#34;&gt;http://jvns.ca/blog/2016/04/25/how-regular-expressions-go-fast/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvns.ca/blog/2016/04/30/cdns-arent-just-for-caching/&#34;&gt;http://jvns.ca/blog/2016/04/30/cdns-arent-just-for-caching/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/presentations/event-streams-kafka&#34;&gt;https://www.infoq.com/presentations/event-streams-kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.linkedin.com/blog/2016/05/introducing-and-open-sourcing-ambry---linkedins-new-distributed-&#34;&gt;https://engineering.linkedin.com/blog/2016/05/introducing-and-open-sourcing-ambry---linkedins-new-distributed-&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://antirez.com/news/107&#34;&gt;http://antirez.com/news/107&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.twitter.com/2016/open-sourcing-twitter-heron&#34;&gt;https://blog.twitter.com/2016/open-sourcing-twitter-heron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.nullspace.io/building-search-engines.html&#34;&gt;http://blog.nullspace.io/building-search-engines.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devblog.mediamath.com/cassandra-war-stories-part-1&#34;&gt;http://devblog.mediamath.com/cassandra-war-stories-part-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://circleci.com/blog/its-the-future/&#34;&gt;https://circleci.com/blog/its-the-future/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mozhu.info/vimmers-you-dont-need-nerdtree-18f627b561c3#.2ag3f2axr&#34;&gt;https://blog.mozhu.info/vimmers-you-dont-need-nerdtree-18f627b561c3#.2ag3f2axr&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.troyhunt.com/going-dark-online-privacy-and-anonymity-for-normal-people/&#34;&gt;https://www.troyhunt.com/going-dark-online-privacy-and-anonymity-for-normal-people/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvns.ca/blog/2016/05/22/how-do-you-write-blog-posts/&#34;&gt;http://jvns.ca/blog/2016/05/22/how-do-you-write-blog-posts/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>pretty print JSON in golang</title>
      <link>http://varunksaini.com/pretty-print-json-golang/</link>
      <pubDate>Sun, 22 May 2016 06:52:53 -0500</pubDate>
      
      <guid>http://varunksaini.com/pretty-print-json-golang/</guid>
      <description>&lt;p&gt;JSON is a very common standard to transmit data objects. &lt;a href=&#34;https://golang.org&#34;&gt;go&lt;/a&gt; provides great support for JSON. &lt;a href=&#34;https://golang.org/pkg/encoding/JSON/&#34;&gt;JSON package&lt;/a&gt; in standard library provides the methods to work with JSON in a go program. Generally we use JSON to tranmit the data but sometime we need to print the JSON data too. If a human eye is going to look at that data, it is a good idea to pretty print that JSON. Here is small function that will do that:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func prettyPrintJSON(b []byte) ([]byte, error) {
	var out bytes.Buffer
	err := JSON.Indent(&amp;amp;out, b, &amp;quot;&amp;quot;, &amp;quot;    &amp;quot;)
	return out.Bytes(), err
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This function takes a byte array and indent the JSON. Each element in JSON object begins on a new line.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>weekly reading 15May</title>
      <link>http://varunksaini.com/weekly-reading-15May/</link>
      <pubDate>Sun, 15 May 2016 08:43:02 -0500</pubDate>
      
      <guid>http://varunksaini.com/weekly-reading-15May/</guid>
      <description>&lt;p&gt;I love reading and read a lot. Mostly my reading is on topics related to programming, science, and social science. When I find an article worth reading I use (pocket)[&lt;a href=&#34;https://getpocket.com&#34;&gt;https://getpocket.com&lt;/a&gt;] to store the article. Once I have 5-10 articles to read, I read them and then share them to twitter or facebook. Most of the reading happen on weekends and I also read some books too. Today morning I thought to start this section on my blog so that if someone find these articles enticing, they can also get the link to read them.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://davidad.github.io/blog/2014/03/12/the-operating-system-is-out-of-date/&#34;&gt;http://davidad.github.io/blog/2014/03/12/the-operating-system-is-out-of-date/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://priceonomics.com/online-dating-and-the-death-of-the-mixed/&#34;&gt;http://priceonomics.com/online-dating-and-the-death-of-the-mixed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aeon.co/opinions/how-game-theory-can-help-you-do-a-better-job-of-parenting&#34;&gt;https://aeon.co/opinions/how-game-theory-can-help-you-do-a-better-job-of-parenting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.economist.com/news/leaders/21698652-europe-and-america-made-mistakes-misery-arab-world-caused-mainly-its-own&#34;&gt;http://www.economist.com/news/leaders/21698652-europe-and-america-made-mistakes-misery-arab-world-caused-mainly-its-own&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.thington.com/the-shape-of-things-66c1a8e9d606#.bt0gjz1vg&#34;&gt;https://blog.thington.com/the-shape-of-things-66c1a8e9d606#.bt0gjz1vg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aeon.co/essays/true-ai-is-both-logically-possible-and-utterly-implausible&#34;&gt;https://aeon.co/essays/true-ai-is-both-logically-possible-and-utterly-implausible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nautil.us/issue/36/aging/physics-makes-aging-inevitable-not-biology&#34;&gt;http://nautil.us/issue/36/aging/physics-makes-aging-inevitable-not-biology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hanselman.com/blog/10YearsAndOver520EpisodesOfPodcastingTechIsAMarathonNotASprint.aspx&#34;&gt;http://www.hanselman.com/blog/10YearsAndOver520EpisodesOfPodcastingTechIsAMarathonNotASprint.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nymag.com/scienceofus/2016/05/half-of-your-friends-probably-dont-think-of-you-as-a-friend.html&#34;&gt;http://nymag.com/scienceofus/2016/05/half-of-your-friends-probably-dont-think-of-you-as-a-friend.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.economist.com/news/leaders/21698240-it-question-when-not-if-real-trouble-will-hit-china-coming-debt-bust&#34;&gt;http://www.economist.com/news/leaders/21698240-it-question-when-not-if-real-trouble-will-hit-china-coming-debt-bust&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>unmarshal to map</title>
      <link>http://varunksaini.com/unmarshal-to-map/</link>
      <pubDate>Sun, 13 Mar 2016 07:57:24 -0500</pubDate>
      
      <guid>http://varunksaini.com/unmarshal-to-map/</guid>
      <description>&lt;p&gt;When you unmarhsal json to a map, always pass the reference to map object. This is very subtle and I fixed two bugs last week related to same thing.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var m map[string]string
err := json.Unmarshal(data, m)
if err != nil {
	return err
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code snippet above will not fail/err. But when you look at m, you will get nothing. To fix this, we need to pass the reference to m in &lt;code&gt;json.Unmarshal&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var m map[string]string
err := json.Unmarshal(data, &amp;amp;m)
if err != nil {
	return err
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>