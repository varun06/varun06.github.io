<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Never stop learning...</title>
    <link>https://varunksaini.com/index.xml</link>
    <description>Recent content on Never stop learning...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Dec 2016 06:05:16 -0600</lastBuildDate>
    <atom:link href="https://varunksaini.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>notes on Stories of your life and others by Ted Chiang</title>
      <link>https://varunksaini.com/posts/my-review-of-stories-of-your-life-and-others-by-Ted-Chiang/</link>
      <pubDate>Sat, 10 Dec 2016 06:05:16 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/my-review-of-stories-of-your-life-and-others-by-Ted-Chiang/</guid>
      <description>&lt;p&gt;I came to know about &lt;a href=&#34;https://en.wikipedia.org/wiki/Ted_Chiang&#34;&gt;Ted Chiang&lt;/a&gt; and his work after movie &lt;a href=&#34;http://www.imdb.com/title/tt2543164/&#34;&gt;Arrival&lt;/a&gt;. I bought &lt;a href=&#34;https://www.amazon.com/dp/B0048EKOP0/&#34;&gt;The story of your life and others&lt;/a&gt; on kindle to give it a read. I like sci-fi and thoroughly enjoyed reading this book. This book is not your everyday bad alien fighting book. This book has 8 short stories and every story is different. I am listing the stories from book below.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Story of your life - My favorite story and Arrival movie is based on this story. In this story a linguist tries to communicate with aliens. Story is about how it works and impacts her life and people around her. A fascinating story and you need to give couple of read to understand everything that is going on in the story.&lt;/li&gt;
&lt;li&gt;Tower of Babylon - My second favorite story from the book, this story make you think about religion and religious beliefs. I still can&amp;rsquo;t visualize how that tower was built, but it is a sci-fi for a reason.&lt;/li&gt;
&lt;li&gt;Liking What you see: A Documentary - This short story asks a question &amp;ldquo;what will happen if everybody looks same&amp;rdquo;. Very interesting read and I will love to see this turned into a movie.&lt;/li&gt;
&lt;li&gt;Division by Zero - How a mathematician goes insane when she finds that she can prove something that deemed impossible in mathematics. Another great read.&lt;/li&gt;
&lt;li&gt;Hell is the absence of God - Another sci-fi story that asks questions about religious beliefs. This story also has angels.&lt;/li&gt;
&lt;li&gt;Understand - A therapy gone wrong and we have a super human with high cognitive functioning.&lt;/li&gt;
&lt;li&gt;Seventy-Two letters - Story about magic and robots.&lt;/li&gt;
&lt;li&gt;The Evolution of Human Science - As the name says, a short sci-fi story about the evolution of human science.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I liked this book very much and I am looking forward to read more from Ted Chiang.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>what do you learn from technical videos</title>
      <link>https://varunksaini.com/posts/what-do-you-learn-from-technical-vidoes/</link>
      <pubDate>Wed, 07 Dec 2016 12:15:46 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/what-do-you-learn-from-technical-vidoes/</guid>
      <description>&lt;p&gt;I watch many technical videos but I feel that I don&amp;rsquo;t learn much from the technical videos. I have tried some techniques but nothing has worked as much as I want. That&amp;rsquo;s why I thoguht of asking, What and how people learn from technical videos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>go puzzlers and thoughts</title>
      <link>https://varunksaini.com/posts/golang-puzzlers-and-thoughts/</link>
      <pubDate>Sun, 04 Dec 2016 07:15:59 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/golang-puzzlers-and-thoughts/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://dave.cheney.net/&#34;&gt;Dave Cheney&lt;/a&gt; gave a talk on &lt;a href=&#34;http://golang.org&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;https://talks.godoc.org/github.com/davecheney/presentations/gopher-puzzlers.slide#1&#34;&gt;puzzlers&lt;/a&gt;. It is a great talk and I encourage you to give it a good read.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import &amp;quot;fmt&amp;quot;

func main() {
    m := make(map[string]int)
    m[&amp;quot;foo&amp;quot;]++
    fmt.Println(m[&amp;quot;foo&amp;quot;])
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Zero Values:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dave asks &amp;ldquo;Is it going to compile and if yes, what will be the output&amp;rdquo;? If you look closely, it is related to &lt;a href=&#34;https://golang.org/ref/spec#The_zero_value&#34;&gt;zero value&lt;/a&gt; for a type. When we initialize &lt;code&gt;m := make(map[string]int)&lt;/code&gt;, both string and int gets &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; values respectively. So increment works as usual.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import &amp;quot;fmt&amp;quot;

func main() {
    m := map[string]int{}
    m[&amp;quot;foo&amp;quot;]++
    fmt.Println(m[&amp;quot;foo&amp;quot;])
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will also work as literal map declaration is same as using &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multiple init():&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

func init() {}
func init() {}

func main() {}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Will this compile?&lt;/p&gt;

&lt;p&gt;Yes, because init(), init() can appear multiple times in a package. Any other multiple function declarations will fail.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

func foo() {}
func foo() {}

func main() {}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fails with &lt;code&gt;foo redeclared in this block&lt;/code&gt;. &lt;a href=&#34;https://play.golang.org/p/czghNc45Nd&#34;&gt;Playground&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there are multiple init() in a package, they are called in the order they are declared. Also you can&amp;rsquo;t make an explicit call to &lt;code&gt;init()&lt;/code&gt; in your code, it will fail.&lt;/p&gt;

&lt;p&gt;More info on &lt;a href=&#34;https://golang.org/doc/effective_go.html#init&#34;&gt;init()&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;panic messages are written to &lt;code&gt;os.Stderr&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;language keywords such as &lt;code&gt;default&lt;/code&gt; etc. should not be used as an identifier. &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; are predeclared identifiers. Predeclared identifiers are at universe block, so you can can shadow them inside smaller scopes, including the package block. But don&amp;rsquo;t shadow predeclared identifiers as it will make code less readable and error prone.&lt;/p&gt;

&lt;p&gt;There are many more puzzles in Dave&amp;rsquo;s slide. Go have a read.&lt;/p&gt;

&lt;p&gt;Note - The code examples here are used from Dave&amp;rsquo;s talk. My intention is to solve and think about some puzzles here.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why there is no place like home - thoughts after reading</title>
      <link>https://varunksaini.com/posts/why-no-place-like-home/</link>
      <pubDate>Sat, 03 Dec 2016 11:39:24 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/why-no-place-like-home/</guid>
      <description>&lt;p&gt;I really like &lt;a href=&#34;https://aeon.co&#34;&gt;Aeon&lt;/a&gt; magazine. Every weekend I get aeon newsletter and there is always some really good article/essay in newsletter. One of these essay that I read today is &lt;a href=&#34;https://aeon.co/essays/why-theres-no-place-like-home-for-anyone-any-more&#34;&gt;why there is no place like home anymore&lt;/a&gt;.This is a really thought provoking essay.&lt;/p&gt;

&lt;p&gt;Essay starts by talking about &lt;a href=&#34;https://www.tumbleweedhouses.com/&#34;&gt;Tiny Homes&lt;/a&gt; that I saw some time back. Tiny home is an interesting concept but I didn&amp;rsquo;t know that you can also save tax on them. From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The fact that these homes are on a trailer and don’t touch the ground can exempt their owners from property tax in states where they count not as homes but as a vehicle&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Home is not only a place where you live, you have so many memories, you feel comfortable when in your home. That&amp;rsquo;s why concept of home is very dear to humans(and to animals also). From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Home is where the heart is, and there is no place like home, yet a sense of being at home can come from many sources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Technological advances and political environment are changing the idea of a home. Things are changing fast and the idea of home is also changing. From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;which makes home as important to politics as the idea of class or rights – especially now, when so many people feel displaced, both literally and figuratively, by life in innovation-driven, high-tech, networked capitalism. On top of that, the contest over where home is and who is entitled to live there, is – in the form of the current apparent crisis over migration – driving global political debate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sharing economy and companies such as Airbnb(&lt;a href=&#34;https://www.airbnb.com/&#34;&gt;https://www.airbnb.com/&lt;/a&gt;) are turning a private place such as home into something that you share with strangers. From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A bedroom can become an income-earning asset when its role in our lives is reassigned by the click of a mouse on a digital platform.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Young people spend most of their time on devices, even when they are home. For them being online is a form of being at home. From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Young people seem to be most at home when they are on – or perhaps ‘in’ – their phones, flicking between apps, surfing their social networks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even when people do activities such as eating food etc. they are their devices with them. From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In contrast, the table in our family house has to be cleared of an Apple store’s worth of equipment before we can eat.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;People are fearful of losing their homes because of technological advances or influx of immigrants(who are in fact looking a home for themselves). From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;this fear of losing our place in the world to the technologies we’ve created will overshadow the next few decades.&lt;/p&gt;

&lt;p&gt;this easily provoked fear of an imaginary pristine national home being ruined by outsiders.&lt;/p&gt;

&lt;p&gt;from technology to immigration, urbanisation and climate change – the idea of home is central.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We need an economic system that instead of fueling the fear of losing, creates an environment where everybody feels at home. We want good capitalism that takes everybody forward. From essay -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;an economic system that helps them build a shared sense of home.&lt;/p&gt;

&lt;p&gt;Capitalism needs once again to give people an orderly sense of home, rather than pitching them into insecurity, as if anything they have might be taken from them in a moment.&lt;/p&gt;

&lt;p&gt;We need a new kind of shared home economics, of home-making and building. The route to power to change society starts at home.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A really good read and makes you realize why you like your home so much.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sunday reading the privileged immigrant</title>
      <link>https://varunksaini.com/posts/sunday-reading-the-priviliged-immigrant/</link>
      <pubDate>Sat, 26 Nov 2016 20:48:29 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/sunday-reading-the-priviliged-immigrant/</guid>
      <description>&lt;p&gt;I was checking some tweets on twitter and came through one that mentioned an article &lt;a href=&#34;http://www.nytimes.com/2016/11/26/opinion/sunday/the-privileged-immigrant.html&#34;&gt;The priviliged immigrant&lt;/a&gt;. The article is written by an author who is of Indian descent. Author talks about hard work her parents did when they came to United States in 1965. Then she talked about her gardener who is a Mexican and seems like an undocumented worker.&lt;/p&gt;

&lt;p&gt;There is a period of uncertainty because of recent elections. Lots of people are talking about immigration. This is an article that talk about some immigrants and two sides of this immigrant debate(legal vs illegal).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>aeon newsletter Nov262016</title>
      <link>https://varunksaini.com/posts/aeon-newsletter-Nov262016/</link>
      <pubDate>Sat, 26 Nov 2016 06:05:16 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/aeon-newsletter-Nov262016/</guid>
      <description>&lt;p&gt;I get &lt;a href=&#34;https://aeon.co&#34;&gt;Aeon&lt;/a&gt; magazine newsletter every weekend. They generally have some good article that I end up reading. In my quest to log what I read and watch here at my blog, today I am going to write about Aeon newsletter. I will only be writing what I read.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Does &lt;strong&gt;Work mean everything to us&lt;/strong&gt;, That is the question author is asking in &lt;a href=&#34;https://aeon.co/essays/what-if-jobs-are-not-the-solution-but-the-problem&#34;&gt;Fuck Work&lt;/a&gt;, an article I read in &lt;a href=&#34;https://aeon.co&#34;&gt;Aeon&lt;/a&gt;. From very long time we have been believing that work is necessary to build human nature. Author asks what if we stop working. He also talks about inequality in job markets.
This article got popular and is in &lt;a href=&#34;https://news.ycombinator.com/item?id=13037810&#34;&gt;Hacker News&lt;/a&gt;. Lots of interesting comments in hacker news threads.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;How some Chinese moving to mountains to get out of daily grind in big cities. They live a life of hermit there, they read and meditate. This video talks about how important it is to take a break and find the piece of mind. The video is in Chinese but has English subtitles.
&lt;a href=&#34;https://aeon.co/videos/why-some-chinese-millennials-are-taking-up-the-hermit-s-life-in-the-mountains&#34;&gt;video&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Leonard Cohen&amp;rsquo;s poem that talks about dreams and being sleepless. Very interesting and thought provoking.
&lt;a href=&#34;https://aeon.co/videos/leonard-cohen-turns-an-erotic-fantasy-that-wasn-t-into-a-sleepless-night-s-dream&#34;&gt;video&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Alan Kay interview by Joe Armstrong</title>
      <link>https://varunksaini.com/posts/Alan-Kay-Joe-Armstrong/</link>
      <pubDate>Fri, 25 Nov 2016 20:47:08 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/Alan-Kay-Joe-Armstrong/</guid>
      <description>&lt;p&gt;I watched this great &lt;a href=&#34;https://www.youtube.com/watch?v=fhOHn9TClXY&#34;&gt;video&lt;/a&gt; where &lt;a href=&#34;http://joearms.github.io/&#34;&gt;Joe Armstrong&lt;/a&gt; interviews &lt;a href=&#34;https://en.wikipedia.org/wiki/Alan_Kay&#34;&gt;Alan Kay&lt;/a&gt;. This is a great video and both Alan Kay and Joe Armstrong talk about some real issues in current computer science. They both are not fond of &lt;strong&gt;cloud&lt;/strong&gt; and &lt;strong&gt;internet of things&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Both Alan Kay and Joe Armstrong want computer science people to understand history and build things that matter. They don&amp;rsquo;t want people to do things just for the sake of doing them(I am looking at you Javascript frameworks). According to them, we need to think as real scientists and use scientific methods to solve problems. Also Alan Kay recommends a lots of great books to read in this interview.&lt;/p&gt;

&lt;p&gt;Following are some quotes from interview:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The best way to predict the future is to invent it.&lt;/p&gt;

&lt;p&gt;Inverse Vandalism.&lt;/p&gt;

&lt;p&gt;Not Big Data, but Big meaning.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>question about type assertion in go</title>
      <link>https://varunksaini.com/posts/question-about-type-assertion/</link>
      <pubDate>Wed, 23 Nov 2016 09:47:56 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/question-about-type-assertion/</guid>
      <description>&lt;p&gt;One of our go app crashed recently because of a bug in &lt;a href=&#34;https://github.com/urfave/cli/&#34;&gt;https://github.com/urfave/cli/&lt;/a&gt;, here is the &lt;a href=&#34;https://github.com/urfave/cli/pull/568&#34;&gt;PR&lt;/a&gt; with fix from my collegue who found the issue. Then we started talking about it internally and found something that&amp;rsquo;s interesting. I understand some of it but not fully so I thought of asking people who might know.&lt;/p&gt;

&lt;p&gt;My question is why &lt;code&gt;bar&lt;/code&gt; works but not &lt;code&gt;foo&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
	&amp;quot;fmt&amp;quot;
)

func main() {
	var f interface{}
	var b interface{}
	f = foo()
	b = bar()

	if _, ok := f.(func(string) error); ok {
		fmt.Println(&amp;quot;FOUND IT&amp;quot;)
	} else {
		fmt.Println(&amp;quot;DIDNT FIND IT&amp;quot;)
	}

	if _, ok := b.(func(string) error); ok {
		fmt.Println(&amp;quot;FOUND IT&amp;quot;)
	} else {
		fmt.Println(&amp;quot;DIDNT FIND IT&amp;quot;)
	}
}

type FooFunc func(string) error

func foo() func(string) error {
	return func(e string) error {
		return fmt.Errorf(&amp;quot;GOTCHA&amp;quot;)
	}
}

func bar() FooFunc {
	return func(e string) error {
		return fmt.Errorf(&amp;quot;GOTCHA&amp;quot;)
	}
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://play.golang.org/p/4EfYIMZV-p&#34;&gt;go playground&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>block youtube on apple mac osx using Parental Controls</title>
      <link>https://varunksaini.com/posts/block-youtube-apple-mac-osx/</link>
      <pubDate>Sat, 12 Nov 2016 06:27:38 -0600</pubDate>
      
      <guid>https://varunksaini.com/posts/block-youtube-apple-mac-osx/</guid>
      <description>&lt;p&gt;I was looking for a way to block Youtube. I searched around and found some ways, such as using openDNS on router level etc.
They all were cumbersome and I wanted a simple solution. So I searched more and found that parental control on mac can do that.&lt;/p&gt;

&lt;p&gt;In mac you can open Parental Controls, and create a new account with Parental Controls enabled or turn Parental Controls on current
account. You need admin access to apply Parental Controls. Once you have Parental Controls on an account, Open Parental Controls -&amp;gt; Account Name -&amp;gt;
Web -&amp;gt; &amp;ldquo;Try to limit access to adult websites&amp;rdquo; (Click on Customize button) -&amp;gt; Click + in &amp;ldquo;Never allow these websites&amp;rdquo; -&amp;gt; Add youtube URL
Click OK, and you are done.&lt;/p&gt;

&lt;p&gt;It took me some time to figure this out and it works well. I hope it will be helpful to someone else.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using if condition in a defer statement</title>
      <link>https://varunksaini.com/posts/using-if-in-defer/</link>
      <pubDate>Tue, 01 Nov 2016 21:10:59 -0500</pubDate>
      
      <guid>https://varunksaini.com/posts/using-if-in-defer/</guid>
      <description>&lt;p&gt;&lt;code&gt;defer&lt;/code&gt; statement is used to do basic cleanup in go, deferred calls are executed when surrounding function returns.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;f, err := os.Open(fileName)
    if err != nil {
        return
    }
defer src.Close()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We open a file and then use &lt;code&gt;defer&lt;/code&gt; to close the file handle. Using &lt;code&gt;defer&lt;/code&gt; makes sure that file handle is closed and we don&amp;rsquo;t have any bug in our code.But what if we want to make a decision(conditional) in &lt;code&gt;defer&lt;/code&gt;, is that possible?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;defer&lt;/code&gt; and &lt;code&gt;named returns&lt;/code&gt; to rescue. Here we are using a form of defer that lets us do something if there is an error and something else if there is not an error.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
	&amp;quot;errors&amp;quot;
	&amp;quot;fmt&amp;quot;
)

var toggleMe = true

func foo() (boo string, err error) {
	boo = &amp;quot;boo&amp;quot;

	defer func() {
		if err != nil {
			fmt.Printf(boo)
		} else {
			fmt.Println(&amp;quot;bar&amp;quot;)
		}
	}()

	if toggleMe {
		err = errors.New(&amp;quot;an error occurred&amp;quot;)
	}

	return
}

func main() {
	foo()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://play.golang.org/p/ap_zkRpcqQ&#34;&gt;Playground&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t know if it is idiomatic go or not and that&amp;rsquo;s where I need your help, let me know if this is correct to do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>how not to handle errors in golang</title>
      <link>https://varunksaini.com/posts/how-not-to-handle-errors-in-golang/</link>
      <pubDate>Thu, 27 Oct 2016 10:40:33 -0500</pubDate>
      
      <guid>https://varunksaini.com/posts/how-not-to-handle-errors-in-golang/</guid>
      <description>&lt;p&gt;People have a love and hate relationship with golang error handling. Golang&amp;rsquo;s use to return values for error handling seems to have as many detractors as admirers. In golang, errors are of immediate interest, so you handle them then and there, so it very common to see code like this -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var user User
err := json.Marshal(data, &amp;amp;user)
if err != nil {
	return err
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a large code base, you see &lt;code&gt;if err != nil&lt;/code&gt; a lot. So people find ways to minimize that, one such approach is creating a common &lt;code&gt;util&lt;/code&gt; package and then create common convenience error functions such as -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func FailIfNil(t *testing.T, i interface{}) {
	if IsNil(i) {
		//handle error here
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These common functions seems helpful, but again, in a large code base, they get out of hand quickly. Debugging becomes difficult.&lt;/p&gt;

&lt;p&gt;My suggestion would be handle errors when and where you see them. keep things simple and readable. Also if you want to do something with your errors, use a good library such as &lt;a href=&#34;https://github.com/davecheney/errors&#34;&gt;this&lt;/a&gt; one from &lt;a href=&#34;http://dave.cheney.net/&#34;&gt;Dave Cheney&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>remove big file from git repo</title>
      <link>https://varunksaini.com/posts/remove-big-file-from-git-repo/</link>
      <pubDate>Sat, 22 Oct 2016 07:35:43 -0500</pubDate>
      
      <guid>https://varunksaini.com/posts/remove-big-file-from-git-repo/</guid>
      <description>&lt;p&gt;Sometimes you push a big binary/text(etc.) file to your git repo and these files stay in your git history. Your repo size go to roof and it takes time to clone that repo, which is a big pain. One of my git repo at work had a big binary(logstash deb file) in history and it was inflating the repo size to over 80mb. So I thought of cleaning the repo and bring down the size. I am sure there are many ways to do it but I am going to write down what I did so somebody else can also benefit.&lt;/p&gt;

&lt;p&gt;I used a tool called &lt;strong&gt;BFG Repo cleaner&lt;/strong&gt;. BFG cleans bad data from git repo. BFG can be downloaded &lt;a href=&#34;http://repo1.maven.org/maven2/com/madgag/bfg/1.12.13/bfg-1.12.13.jar&#34;&gt;here&lt;/a&gt; and provides a comprehensive list of option to clean git repo. It is an alternative to &lt;code&gt;git-filter-branch&lt;/code&gt;, which I have no idea about.&lt;/p&gt;

&lt;p&gt;To use BFG on a git repo follow these steps:&lt;/p&gt;

&lt;p&gt;First clone a fresh copy of your repo, using the &lt;code&gt;--mirror&lt;/code&gt; flag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone --mirror git://github.com/big-repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run the BFG to clean any big file that has a size greater then 100mb:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ java -jar bfg.jar --strip-blobs-bigger-than 100M big-repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or, if you know the name of file, you can give the name too:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ java -jar bfg.jar --delete-files file_name  big-repo.git 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After running the command above, BFG will update your commits and all branches and tags so they are clean, but it doesn&amp;rsquo;t physically delete the unwanted stuff. Examine the repo to make sure your history has been updated, and then use the standard &lt;code&gt;git gc&lt;/code&gt; command to strip out the unwanted dirty data, which Git will now recognise as surplus to requirements:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd big-repo 
$ git reflog expire --expire=now --all &amp;amp;&amp;amp; git gc --prune=now --aggressive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, once you&amp;rsquo;re happy with the updated state of your repo, push it back up (note that because your clone command used the &lt;code&gt;--mirror&lt;/code&gt; flag, this push will update all refs on your remote server):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you push new and clean history to your repo, ditch old copies of the repo and then fresh clone/fork. Delete the old clones as they have dirty history, if you have some PR&amp;rsquo;s, fetch them from master or cherry pick the commits you want.&lt;/p&gt;

&lt;p&gt;After all these your repo size should be significantly lower. In my case, I brought the size down from 82mb to 4.1mb.&lt;/p&gt;

&lt;p&gt;Let me know if you have any question or suggestions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>get back to blogging</title>
      <link>https://varunksaini.com/posts/get-back-to-blogging/</link>
      <pubDate>Sun, 16 Oct 2016 09:02:02 -0500</pubDate>
      
      <guid>https://varunksaini.com/posts/get-back-to-blogging/</guid>
      <description>&lt;p&gt;I have not been writing anything from some time. But I want to get back to it and have decided writing something every week. I will start by writing a review of a book that I read recently. I think it will be a good way to get back to writing and I will also get some motivation to read book. I have a list of technical books that I want to go through and learn. So let&amp;rsquo;s begin.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>laptop repair</title>
      <link>https://varunksaini.com/posts/laptop-repair/</link>
      <pubDate>Sat, 13 Aug 2016 10:26:10 -0500</pubDate>
      
      <guid>https://varunksaini.com/posts/laptop-repair/</guid>
      <description>&lt;p&gt;I haven&amp;rsquo;t published anything on my blog because my personal laptop was having some issues. It is a mid 2012 retina Macbook Pro and I have it from last 4 years. It was &lt;code&gt;kernel panicking&lt;/code&gt; and restarting every 5 minutes or so. I took it to Apple store and they ran some hardware tests. First they reinstalled the operating system and it did not help. I took it back for repair and they replaced the &lt;code&gt;logic board&lt;/code&gt;. Apple charged a flat fee of &lt;code&gt;$310 + tax&lt;/code&gt; for repairs. After repairs, laptop is working fine and I should be back to blooging now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>good read on golang and generics</title>
      <link>https://varunksaini.com/posts/good-read-on-golang-and-generics/</link>
      <pubDate>Sun, 17 Jul 2016 06:57:00 -0500</pubDate>
      
      <guid>https://varunksaini.com/posts/good-read-on-golang-and-generics/</guid>
      <description>&lt;p&gt;Generics in Golang is a topic that everybody loves to talk :). There have been lots of articles on golang and generics such as &lt;a href=&#34;http://blog.jonathanoliver.com/golang-has-generics/&#34;&gt;this&lt;/a&gt;, &lt;a href=&#34;http://bouk.co/blog/idiomatic-generics-in-go/&#34;&gt;this&lt;/a&gt; and &lt;a href=&#34;http://blog.ralch.com/tutorial/golang-code-generation-and-generics/&#34;&gt;this&lt;/a&gt;. You can see it is a favorite topics of golang developers to talk about (My team personally discuss lack of generics in golang at least once a week).&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&#34;https://appliedgo.net/generics/&#34;&gt;this&lt;/a&gt; article about generics on reddit and found it very informative. I hope this is helpful to you as I found it helpful for me.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>