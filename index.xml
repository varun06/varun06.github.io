<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Varun K Saini</title>
    <link>http://varunksaini.com/</link>
    <description>Recent content on Varun K Saini</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Wed, 13 May 2015 20:41:00 -0600</lastBuildDate>
    <atom:link href="http://varunksaini.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>goto Chicago Conference 2015</title>
      <link>http://varunksaini.com/posts/goto-chicago-2015/</link>
      <pubDate>Wed, 13 May 2015 20:41:00 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/goto-chicago-2015/</guid>
      <description>

&lt;p&gt;This week I went to GOTO Chicago conference. It was held in Westin hotel on Clark street. The conference was on 11th and 12th May 2015. GOTO is an yearly conference and has been going on from some time. My employer sponsored the conference also.&lt;/p&gt;

&lt;p&gt;It was a great conference and had a mix of talks on Programming Languages, Distributed Computing, Testing, General (Agile) etc. I attended bunch of talks delivered by some wonderful speakers.&lt;/p&gt;

&lt;h2 id=&#34;monday:e6b5a84ca155978c9ccb3cf2263b1856&#34;&gt;Monday&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;
&lt;img src=&#34;http://varunksaini.com/img/gotopic.png&#34; alt=&#34;GOTO conf Chicago 2015&#34; title=&#34;GOTO Conf&#34; style=&#34;width:700px; height: 500px;&#34;&gt;
&lt;quote &gt; By Anita Sengupta(Shared on Twitter)&lt;/quote&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Curiosity’s Entry Descent and Landing on Mars by Anita Sengupta(&lt;a href=&#34;https://twitter.com/Doctor_Astro&#34;&gt;@Doctor_Astro&lt;/a&gt;)&lt;/strong&gt; - Who doesn&amp;rsquo;t love space and space exploration. This was ending keynote and Anita made it one to remember for the ages. She talked about how Nasa JPL team managed to land a robot on Mars surface with state of the art technology and lots of hard work. Anita worked on &lt;strong&gt;Curiosity&lt;/strong&gt; mars rover and built the supersonic parachute used by the rover. She is currently working as a project manager for &amp;ldquo;Cold Atom Laboratory&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jepsen IV: Hope Springs Eternal by Kyle Kingsbury(&lt;a href=&#34;https://twitter.com/aphyr&#34;&gt;@aphyr&lt;/a&gt;) &lt;/strong&gt; -  Kyle is famous for his distributed database testing tool called Jespen. Kyle is a very good speaker and his slides were top class. If you are in distributed computing or databases, check out Kyle&amp;rsquo;s work.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/KyleKingsbury_JepsenIVHopeSpringsEternal.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Applying Reactive Programming with RxJava by Ben Christensen from Netflix(&lt;a href=&#34;https://twitter.com/benjchristensen&#34;&gt;@benjchristensen&lt;/a&gt;)&lt;/strong&gt; - The talk was about Java and Rx by Netflix. Good talk about writing async code in Java and How Netflix does it. It was good to see how another programming language apart from Go doing async and concurrency.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/BenChristensen_ApplyingReactiveProgrammingWithRx.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deploy like a Boss by Oliver Nicholas(&lt;a href=&#34;https://twitter.com/wonlove&#34;&gt;@wonlove&lt;/a&gt;)&lt;/strong&gt; - In this talk Oliver talked about how Uber deploys to production. They started with shell scripts but now they use Mesos + Marathon for deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Patterns for Docker Success by Simon Eskildsen(&lt;a href=&#34;https://twitter.com/sirupsen&#34;&gt;@sirupsen&lt;/a&gt;)&lt;/strong&gt; - Simon was a great presenter and he talked about how Shopify is using Docker. He talked about what other companies trying to use Docker can use from Shopify experience.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/SimonEskildsen_PatternsForDockerSuccess.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How I finally stopped worrying and learnt to love Conway’s Law by James Lewis(&lt;a href=&#34;https://twitter.com/boicy&#34;&gt;@boicy&lt;/a&gt;)&lt;/strong&gt;
**Evolutionary Architecture &amp;amp; Micro-Services - A Match Enabled by Continuous Delivery by Rebecca Parsons(&lt;a href=&#34;https://twitter.com/rebeccaparsons&#34;&gt;@rebeccaparsons&lt;/a&gt;)** - Both of these talks were about Micro-services architecture and how organizations can benefit with Micro-services. Rebecca even talked about when to use micro-services. She suggested that if you are building a new system you should start with a monolith architecture but with good design and then move to micro-services. If you start with micro services, you might define the boundaries of your system wrong.
&lt;br&gt;
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/JamesLewis_HowIFinallyStoppedWorryingAndLearntToLoveConwaysLaw.pdf&#34;&gt;Slides from James Lewis talk&lt;/a&gt;
&lt;br&gt;
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/RebeccaParsons_EvolutionaryArchitectureMicroServicesAMatchEnabledByContinuousDelivery.pdf&#34;&gt;Slides from Rebecca Parsons talk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;End-to-end Encryption in Cloud Services by Patrick Linskey&lt;/strong&gt; - This is the talk that I could not understand much. Speaker tried his best but either crypto is hard or end to end encryption is very hard. &lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/PatrickLinskey_EndToEndEncryptionInCloudServices.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;tuesday:e6b5a84ca155978c9ccb3cf2263b1856&#34;&gt;Tuesday&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;How did we end up Here by Martin Thompson(&lt;a href=&#34;https://twitter.com/mjpt777&#34;&gt;@mjpt777&lt;/a&gt;) and Todd Montgomery(&lt;a href=&#34;https://twitter.com/toddlmontgomery&#34;&gt;@toddlmontgomery&lt;/a&gt;)&lt;/strong&gt; - Martin and Todd talked about current trends and issues with software development. They talked about increasing complexity and how to solve the problem. They also talked about diversity issues in Software engineering field.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/MartinThompson_and_ToddMontgomery_HowDidWeEndUpHere.pdf&#34;&gt;Slide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level Up Your Automated Tests by Trisha Gee(&lt;a href=&#34;https://twitter.com/trisha_gee&#34;&gt;@trisha_gee&lt;/a&gt;)&lt;/strong&gt; - This was one of the talk from testing track. Trisha talked about how to have the culture of writing tests. She said that tests can be used as a documentation also and that resonated very well with everybody in the room. She also gave some examples from her work with Spock and JUnit.
She forgot to charge her laptop and ended up using hand written slides and that was cool. :)
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/TrishaGee_LevelUpYourAutomatedTests.pdf&#34;&gt;Slide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unselfish Testing by Jay Fields(&lt;a href=&#34;https://twitter.com/thejayfields&#34;&gt;@thejayfields&lt;/a&gt;)&lt;/strong&gt; - Jay has written a book on JUnit testing. Jay also emphasized the point of writing better tests. He gave examples about how to make tests better and follow the DRY principle.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/JayFields_UnselfishTesting.pdf&#34;&gt;Slide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Faster Java Objects by Gil Tene(&lt;a href=&#34;https://twitter.com/giltene&#34;&gt;@giltene&lt;/a&gt;)&lt;/strong&gt; -Gil is CTO of Azul systems and talked about faster java objects. Basically they want to have flat memory layout for objects in Java so that they can make them easily streamable. It was a fascinating talk and I learned few things coz I am also working on a problem of reading binary from c structs.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/GilTene_FasterJavaObjects.pdf&#34;&gt;Slide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Go is making us faster by Wilfried Schobeiri(&lt;a href=&#34;https://twitter.com/nphase&#34;&gt;@nphase&lt;/a&gt;)&lt;/strong&gt; - Wil gave a talk on how MediaMath is using Go lang. I was not present for this talk but I have already seen this couple of time. It is real good talk and brings out some of the great things about Go lang, such as easy to learn, fast, and good concurrency.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/WilfriedSchobeiri_HowGoIsMakingUsFaster.pdf&#34;&gt;Slide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;rsquo;t give up on serializability just yet! by Neha Narula(&lt;a href=&#34;https://twitter.com/neha&#34;&gt;@neha&lt;/a&gt;)&lt;/strong&gt; - Neha talked about distributed computing and how serializability plays its part. She talked about Spanner and other distributed systems.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/NehaNarula_DontGiveUpOnSerializabilityJustYet.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Applying the Saga Pattern by Caitie McCaffrey(&lt;a href=&#34;https://twitter.com/caitie&#34;&gt;@caitie&lt;/a&gt;)&lt;/strong&gt; - In this talk Caitie talked about her work with Halo 4 (game) and how she used Saga pattern to solve a distributed computing problem. She also talked about how transactions happen with Saga pattern and how other people can also leverage Saga pattern.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/CaitieMcCaffrey_ApplyingTheSagaPattern.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coordination-Free Computations by Christopher Meiklejohn(&lt;a href=&#34;https://twitter.com/cmeik&#34;&gt;@cmeik&lt;/a&gt;)&lt;/strong&gt; - This was a very advanced talk on distributed computing where Christopher talked about coordination free computation. He works on Riak team and he showed how he used Riak and CRDT&amp;rsquo;s. He is working on a distributed programming language called LASP.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/ChristopherMeiklejohn_CoordinationFreeComputations.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;From Homogeneous Monolith to Radically Heterogeneous Microservices: The Wunderlist 3 Story by Chad Fowler(&lt;a href=&#34;https://twitter.com/chadfowler&#34;&gt;@chadfowler&lt;/a&gt;)&lt;/strong&gt; - A fun ending keynote from Chad. He talked about how he changed Wunderlist from a monolith to micro services. He talked about clean architecture and how it is important to keep complexity in check in a system. He also talked about how we should take inspiration from our own system(body) and build a system that heal itself.
&lt;a href=&#34;http://gotocon.com/dl/goto-chicago-2015/slides/ChadFowler_FromHomogeneousMonolithToRadicallyHeterogeneousMicroservicesTheWunderlist3Story.pdf&#34;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was a great conference but &lt;strong&gt;diversity&lt;/strong&gt; is still an issue for software industry. There were very few women in audience/speakers. This is a big issue and some speakers even pointed out on stage too. So we all need to work towards making software engineering a more diverse place.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>testing in go lang</title>
      <link>http://varunksaini.com/posts/testing-in-go/</link>
      <pubDate>Sat, 09 May 2015 06:41:00 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/testing-in-go/</guid>
      <description>

&lt;p&gt;Testing is an integral part of software development and as a squad (if you are wondering what is a squad in software company setting, check &lt;a href=&#34;https://vimeo.com/85490944&#34;&gt;Spotify Culture&lt;/a&gt;) in &lt;a href=&#34;https://www.mediamath.com&#34;&gt;MediaMath&lt;/a&gt;, our mantra is that &lt;strong&gt;&amp;ldquo;Regrassion Resistence is a software requirement&amp;rdquo;&lt;/strong&gt; and should be taken care from the start of the project. We give a lot of emphasis on testing the software and having a good test coverage. We have written some tools around &lt;code&gt;go coverage&lt;/code&gt; and &lt;code&gt;go get&lt;/code&gt; &lt;a href=&#34;https://github.com/MediaMath/cove&#34;&gt;cove&lt;/a&gt; to help us with our testing process.&lt;/p&gt;

&lt;p&gt;Go is a batteries included programming language. Go provides testing as part of standard library and that means testing is a first class citizen in Go world. Writing a test in Go is as easy as writing a function. The test function start with &lt;strong&gt;TestXXXXX&lt;/strong&gt; and you can write as many tests as you want. If you have a file such as &lt;strong&gt;&amp;ldquo;github_api.go&amp;rdquo;&lt;/strong&gt;, you can group the tests(create a test suite) for that file in a test file with a name as &lt;strong&gt;&amp;ldquo;github_api_test.go&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Go tests are run with &lt;strong&gt;&lt;code&gt;go test&lt;/code&gt;&lt;/strong&gt; command.&lt;/p&gt;

&lt;h5 id=&#34;a-sample-function:41a817ce30820111ed95bff4b0e3bf7b&#34;&gt;A Sample function:&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;package abc

func Add(a, b int) int {
	return a + b
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;test-function:41a817ce30820111ed95bff4b0e3bf7b&#34;&gt;Test function:&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;package abc

import &amp;quot;testing&amp;quot;

func TestAdd(t *testing.T) {
	var a, b int = 2, 3
	v := Add(a, b)
	if v != 5 {
		t.Error(&amp;quot;Expected 5, got &amp;quot;, v)
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can learn more about Go lang testing package at &lt;a href=&#34;http://golang.org/pkg/testing/&#34;&gt;testing&lt;/a&gt;, if you want to look at the source code &lt;a href=&#34;http://golang.org/src/testing/testing.go&#34;&gt;testing source code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;P.S. In Go documentation, if you want to check package documentation just use &amp;ldquo;&lt;a href=&#34;http://golang.org/pkg/(packagename)&amp;quot;&#34;&gt;http://golang.org/pkg/(packagename)&amp;quot;&lt;/a&gt; and if you want source code &amp;ldquo;&lt;a href=&#34;http://golang.org/src/(packagename)&amp;quot;&#34;&gt;http://golang.org/src/(packagename)&amp;quot;&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pointer type in Go</title>
      <link>http://varunksaini.com/posts/pointer_in_go/</link>
      <pubDate>Sun, 26 Apr 2015 07:40:00 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/pointer_in_go/</guid>
      <description>&lt;p&gt;Go has pointer but no pointer arithmatic. Go is strict about memory safety but sometime you need to get access to pointers. I am working on a task where I am porting some C code to Go. C code is using a lot of pointers and I wanted a way to replicate same in Go. Go has a package called &lt;a href=&#34;https://golang.org/pkg/unsafe/#Pointer&#34;&gt;unsafe&lt;/a&gt; and unsafe package provides a Pointer type.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;unsafe&amp;quot;
)

func main() {
	type test struct{}
	var myTest = new(test)
	myPtr := unsafe.Pointer(myTest)
	fmt.Printf(&amp;quot;%T&amp;quot;, myPtr)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;myPtr&lt;/code&gt; is &amp;ldquo;unsafe.Pointer&amp;rdquo; type and if you want to use any operator or cast it to any other pointer, cast it to &lt;code&gt;uintptr&lt;/code&gt; first.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;unsafe&amp;quot;
)

func main() {
	type test struct{}
	var myTest = new(test)
	myPtr := unsafe.Pointer(myTest)

	newMyPtr := uint32(myPtr)
	fmt.Printf(&amp;quot;%T&amp;quot;, newMyPtr)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will generate an error &amp;ldquo;cannot convert myPtr (type unsafe.Pointer) to type uint32&amp;rdquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;unsafe&amp;quot;
)

func main() {
	type test struct{}
	var myTest = new(test)
	myPtr := unsafe.Pointer(myTest)

	newMyPtr := uint32(uintptr(myPtr))
	fmt.Printf(&amp;quot;%T&amp;quot;, newMyPtr)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This works fine.&lt;/p&gt;

&lt;p&gt;Just be carefull when using unsafe package. If not used properly you might end up looking at memory leaks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>using io.LimitReader to read a binary file</title>
      <link>http://varunksaini.com/posts/using_io_limitreader/</link>
      <pubDate>Sat, 18 Apr 2015 10:42:00 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/using_io_limitreader/</guid>
      <description>&lt;p&gt;I was working on a problem and wanted to read a very specific chunck of file. I read Go documentation and came through &lt;a href=&#34;http://golang.org/pkg/io/#LimitedReader&#34;&gt;io.LimitReader&lt;/a&gt;. According to official documentation, &amp;ldquo;A LimitedReader reads from R but limits the amount of data returned to just N bytes. Each call to Read updates N to reflect the new amount remaining.&amp;rdquo; and this is what I wanted.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;
f, _ := os.Open(&amp;quot;largefile.bin&amp;quot;)
f.Seek(123, 0)

b := make([]byte, 150-123) // remaining length after seek

f.Read(&amp;amp;b)
f.Close()

buf := bytes.NewBuffer(b) // create buffer with the needed bytes

var a float32
binary.Read(buf, binary.LittleEndian, &amp;amp;a)

binary.Read(io.LimitReader(r, 150-123), binary.LittleEndian, &amp;amp;a)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Thinking, Fast and Slow</title>
      <link>http://varunksaini.com/reading/thinking_fast_and_slow/</link>
      <pubDate>Sat, 18 Apr 2015 10:36:30 -0400</pubDate>
      
      <guid>http://varunksaini.com/reading/thinking_fast_and_slow/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman/dp/0374533555&#34;&gt;Thinking, Fast and Slow&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Get operating system name in Go</title>
      <link>http://varunksaini.com/posts/get-os-name-in-go/</link>
      <pubDate>Sat, 03 Jan 2015 06:13:00 +0000</pubDate>
      
      <guid>http://varunksaini.com/posts/get-os-name-in-go/</guid>
      <description>&lt;p&gt;To get the operating system name where we running a Go program, we can use &lt;strong&gt;runtime&lt;/strong&gt; package. &lt;strong&gt;runtime.GOOS&lt;/strong&gt; return the operating system name. Some people try to use &lt;strong&gt;os.Getenv(&amp;ldquo;GOOS&amp;rdquo;)&lt;/strong&gt; but it is not very reliable. I always use &lt;a href=&#34;http://golang.org/pkg/runtime/&#34;&gt;runtime package&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-language=go&#34;&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;runtime&amp;quot;
)

func main() {
	var goos string = runtime.GOOS
	fmt.Printf(&amp;quot;The operating system is: %s\n&amp;quot;, goos)
}

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Books I read in 2014</title>
      <link>http://varunksaini.com/posts/books-in-2014/</link>
      <pubDate>Thu, 01 Jan 2015 07:00:00 +0000</pubDate>
      
      <guid>http://varunksaini.com/posts/books-in-2014/</guid>
      <description>&lt;p&gt;I read 7 books (and ton of artilcles in &lt;a href=&#34;http://getpocket.com/&#34;&gt;pockets&lt;/a&gt; app) this year.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;img src=&#34;http://varunksaini.com/img/pocket.png&#34; alt=&#34;Pocket app stats&#34; title=&#34;Pocket app&#34; style=&#34;width:500px; height: 300px;&#34;&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Most of the books that I read were technical ranging on different topics. I read couple of physics books such as &lt;a href=&#34;http://www.amazon.com/gp/product/B00DFL353K/&#34;&gt;Hidden In Plain Sight 2: The Equation of the Universe&lt;/a&gt; and &lt;a href=&#34;http://www.amazon.com/The-Particles-Universe-Jeff-Yee-ebook/dp/B007PM4ZZW&#34;&gt;The particles of universe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I read one fiction book &lt;a href=&#34;http://www.amazon.com/Lethal-Code-Lana-Elkins-Thriller-ebook/dp/B00J9P2EMO/&#34;&gt;Lethal Code&lt;/a&gt;, which I didn&amp;rsquo;t like much. It had a great promise but writing could have been better.&lt;/p&gt;

&lt;p&gt;For 2015, I am planning to read at least 15 books and will try to add some variety this time. I want to read some good fiction, non-fiction, science, technology books. I also have a backlog of 4-5 books that I need to finish this year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BACKLOG&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman/dp/0374533555&#34;&gt;Thinking Fast And Slow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Hooked-How-Build-Habit-Forming-Products-ebook/dp/B00LMGLXTS/&#34;&gt;Hooked: How to Build Habit-Forming Products&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/&#34;&gt;Pragmatic Programmer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Last-Passenger-Manel-Loureiro-ebook/dp/B00KWM7HYI/&#34;&gt;The Last Passenger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Fallow-Season-Hugo-Hunter-ebook/dp/B00JQS1TMK/&#34;&gt;The Fallow Season Of Hugo Hunter&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some of these books I got from Amazon Prime (Kindle First) and haven&amp;rsquo;t got a chance to read yet.&lt;/p&gt;

&lt;p&gt;I am currently reading 2 books-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Ultimate-Bar-Book-Comprehensive-Cocktails-ebook/
dp/B003IV8GUY/&#34;&gt;The ultimate bar book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/Way-Go-Thorough-Introduction-Programming-ebook/dp/B0083RVAJW/&#34;&gt;The Way to Go: A Thorough Introduction to the Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And also tons of articles again in 2015.&lt;/p&gt;

&lt;p&gt;Happy Reading All.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>human&#43;&#43;</title>
      <link>http://varunksaini.com/posts/new-human-age/</link>
      <pubDate>Tue, 30 Dec 2014 08:11:15 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/new-human-age/</guid>
      <description>&lt;p&gt;We all talk about an omnipotent AI that will come some time in future and might kill (hypothetically) its masters (humans in this case). I will love to have intelligent robots but I don&amp;rsquo;t see it happening soon. What I believe will happen before AI take over the world, human++, more intelligent humans. If we look carefully we will see subtle changes and technical breakthroughs that are happening around us and pointing towards a brave new world. Some people call this phenomena &amp;ldquo;Singularity&amp;rdquo; but I call it human++.&lt;/p&gt;

&lt;p&gt;There are many cutting edge research and experiments happening to make this a reality. Some of these are mentioned below and well worth you time to check out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Nano-bots and biological uses&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6UVet-OCFdI&amp;amp;utm&#34;&gt;Ray Kurzweil and Robert Freitas discuss the future of nanotechnology&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Human Mind interface&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://research.microsoft.com/en-us/um/people/desney/publications/BCIHCI-Chapter1.pdf&#34;&gt;Microsoft research on brain computer interaction&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Exoskeletons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://biomech.media.mit.edu/portfolio_page/load-bearing-exoskeleton-for-augmentation-of-human-running/&#34;&gt;MIT media lab on exoskeleton and their usage in augmenting humans&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Fight against aging :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Calico_%28company%29&#34;&gt;Google calico&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the things and others will make humans more intelligent, more resilient to disease and other medical issues, more powerful and may be someday Immortal.&lt;/p&gt;

&lt;p&gt;I am no scientist or philosopher, I am just a mere human who sees the things changing around him and trying to connect the dots. It is not easy to understand what is going on but I am an optimist and believe all these changes will make humans better and might one day make us an inter galactic species.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We all know that AI is good, but you know what is best, more intelligent humans.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working with files in go lang</title>
      <link>http://varunksaini.com/posts/working-with-files-in-go/</link>
      <pubDate>Sat, 13 Dec 2014 06:40:15 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/working-with-files-in-go/</guid>
      <description>&lt;p&gt;Go makes working with file very easy and file reading is an operation that is used very frequently.&lt;/p&gt;

&lt;p&gt;To open a file in Go, we can use &amp;ldquo;Open&amp;rdquo; function from the &amp;ldquo;os&amp;rdquo; package.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-language=Go&#34;&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;os&amp;quot;
)

func main() {
	file, err := os.Open(&amp;quot;test.txt&amp;quot;)
	if err != nil {
		fmt.Println(&amp;quot;erros is: &amp;quot;, err)
		return
	}
	defer file.Close()

	size, err := file.Stat()
	if err != nil {
		fmt.Println(&amp;quot;erros is: &amp;quot;, err)
		return
	}

	fs := make([]byte, size.Size())
	_, err = file.Read(fs)
	if err != nil {
		fmt.Println(&amp;quot;erros is: &amp;quot;, err)
		return
	}

	str := string(fs)
	fmt.Println(str)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I really like how you can simply defer the file close operation just after creating a file object. In Go you use &amp;ldquo;defer&amp;rdquo; to do that. any function that use defer will excute in the end. This way we don&amp;rsquo;t have to worry about forgeting closing the file.&lt;/p&gt;

&lt;p&gt;There is a shorter way to read files too.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-language=Go&#34;&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;io/ioutil&amp;quot;
)

func main() {
	fs, err := ioutil.ReadFile(&amp;quot;test.txt&amp;quot;)
	if err != nil {
		fmt.Println(&amp;quot;Error is: &amp;quot;, err)
	}

	str := string(fs)
	fmt.Println(str)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we want to create a file instead of reading it, just use&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-language=Go&#34;&gt;file, err := os.Create(&amp;quot;test.txt&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Particles of the universe</title>
      <link>http://varunksaini.com/reading/Particles_of_the_universe/</link>
      <pubDate>Sat, 13 Dec 2014 06:32:30 -0400</pubDate>
      
      <guid>http://varunksaini.com/reading/Particles_of_the_universe/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Particles-Universe-Jeff-Yee-ebook/dp/B007PM4ZZW/&#34;&gt;Particles of the universe&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Ultimate Bar Book</title>
      <link>http://varunksaini.com/reading/the_Ultimate_Bar_Book/</link>
      <pubDate>Sat, 13 Dec 2014 06:29:30 -0400</pubDate>
      
      <guid>http://varunksaini.com/reading/the_Ultimate_Bar_Book/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Ultimate-Bar-Book-Comprehensive-Cocktails-ebook/dp/B003IV8GUY&#34;&gt;The Ultimate Bar Book: The Comprehensive Guide to Over 1,000 Cocktails&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go lang boiler plate sublime text snippet</title>
      <link>http://varunksaini.com/posts/go-boiler-plate-snippet-sublime-text/</link>
      <pubDate>Sat, 06 Dec 2014 19:07:32 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/go-boiler-plate-snippet-sublime-text/</guid>
      <description>&lt;p&gt;If you work with go lang, you know that every time you write a new go program you have to add some lines of go code that is same most of the time. if you are learning and keep creating small scripts then it gets annoying some time. Sublime text provides an option to create snippets and you can use snippets to auto fill some go lang boiler plate.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-language=go&#34;&gt;&amp;lt;snippet&amp;gt;
	&amp;lt;content&amp;gt;&amp;lt;![CDATA[
package main

import &amp;quot;fmt&amp;quot;

func main() {
	fmt.Println(&amp;quot;${1:// content...}&amp;quot;)
}
]]&amp;gt;&amp;lt;/content&amp;gt;
	&amp;lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&amp;gt;
	&amp;lt;tabTrigger&amp;gt;fun&amp;lt;/tabTrigger&amp;gt;
	&amp;lt;!-- Optional: Set a scope to limit where the snippet will trigger --&amp;gt;
	&amp;lt;!-- &amp;lt;scope&amp;gt;source.python&amp;lt;/scope&amp;gt; --&amp;gt;
&amp;lt;/snippet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To add a snippet in Sublime text, Select Tools-&amp;gt; New Snippet from Menu. It will open a new file
in sublime text, paste the above code and make require changes.&lt;/p&gt;

&lt;p&gt;Save the snippet and you are all set. Next time when you create a new go file just write &amp;ldquo;fun&amp;rdquo; and hit tab, you will have some go lang boiler plate to start with.&lt;/p&gt;

&lt;p&gt;This is just a simple snippet, but you can create other complex snippets such as functions, interfaces etc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>lethal code</title>
      <link>http://varunksaini.com/backup/lethal-code/</link>
      <pubDate>Mon, 01 Dec 2014 07:01:18 -0400</pubDate>
      
      <guid>http://varunksaini.com/backup/lethal-code/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Lethal-Code-Lana-Elkins-Thriller/dp/1477825053/&#34;&gt;lethal code : Fiction about cyber attacks on power grid etc.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find Mimimum Value in an array in go</title>
      <link>http://varunksaini.com/posts/find-minimum-value-array-go/</link>
      <pubDate>Wed, 26 Nov 2014 06:24:00 -0600</pubDate>
      
      <guid>http://varunksaini.com/posts/find-minimum-value-array-go/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;fmt&amp;quot;
)

func main() {
	x := []int{
		48, 96, 86, 68,
		57, 82, 63, 70,
		37, 34, 83, 27,
		19, 97,  9, 17,
	}

	min:= x[0]

	for _, value := range x {
		if value &amp;lt; min {
			min = value
		}
	}
	fmt.Println(min)
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GO lang book</title>
      <link>http://varunksaini.com/backup/golang-book/</link>
      <pubDate>Wed, 26 Nov 2014 07:01:18 -0400</pubDate>
      
      <guid>http://varunksaini.com/backup/golang-book/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.golang-book.com/&#34;&gt;golang book - good for go lang beginners&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>