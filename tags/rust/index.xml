<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on Varun Kumar</title>
    <link>https://varunksaini.com/tags/rust/</link>
    <description>Recent content in rust on Varun Kumar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Sep 2022 07:31:09 -0500</lastBuildDate><atom:link href="https://varunksaini.com/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Guessing Game from Rust book in  Go</title>
      <link>https://varunksaini.com/guessing-game-rust-and-go/</link>
      <pubDate>Sun, 11 Sep 2022 07:31:09 -0500</pubDate>
      
      <guid>https://varunksaini.com/guessing-game-rust-and-go/</guid>
      <description>This year I have been finding some time and learning Rust. I am going to write about my learning journey in another post. Today I want to talk about converting Guessing game from Rust book to Go. It was a fun and quick exercise. It&amp;rsquo;s interesting to see that both programms are almost same in size. Here is Rust code from Book.
usestd::io;userand::Rng;usestd::cmp::Ordering;fn main(){println!(&amp;#34;Guess the number!!&amp;#34;);letsecret_number=rand::thread_rng().gen_range(1..=100);loop{println!(&amp;#34;Please input your guess.&amp;#34;);letmutguess=String::new();io::stdin().read_line(&amp;amp;mutguess).expect(&amp;#34;Failed to read line&amp;#34;);letguess: u32 =matchguess.</description>
    </item>
    
  </channel>
</rss>
